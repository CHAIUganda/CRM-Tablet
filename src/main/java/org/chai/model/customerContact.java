package org.chai.model;

import org.chai.model.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table CUSTOMER_CONTACT.
 */
public class customerContact {

    private Long id;
    /** Not-null value. */
    private String sysid;
    /** Not-null value. */
    private String name;
    /** Not-null value. */
    private String contact;
    /** Not-null value. */
    private String typeOfContact;
    /** Not-null value. */
    private String gender;
    /** Not-null value. */
    private String role;
    /** Not-null value. */
    private String qualification;
    private String networkOrAssociation;
    private Integer graduationYear;
    private long customerId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient customerContactDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public customerContact() {
    }

    public customerContact(Long id) {
        this.id = id;
    }

    public customerContact(Long id, String sysid, String name, String contact, String typeOfContact, String gender, String role, String qualification, String networkOrAssociation, Integer graduationYear, long customerId) {
        this.id = id;
        this.sysid = sysid;
        this.name = name;
        this.contact = contact;
        this.typeOfContact = typeOfContact;
        this.gender = gender;
        this.role = role;
        this.qualification = qualification;
        this.networkOrAssociation = networkOrAssociation;
        this.graduationYear = graduationYear;
        this.customerId = customerId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getCustomerContactDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getSysid() {
        return sysid;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSysid(String sysid) {
        this.sysid = sysid;
    }

    /** Not-null value. */
    public String getName() {
        return name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setName(String name) {
        this.name = name;
    }

    /** Not-null value. */
    public String getContact() {
        return contact;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setContact(String contact) {
        this.contact = contact;
    }

    /** Not-null value. */
    public String getTypeOfContact() {
        return typeOfContact;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setTypeOfContact(String typeOfContact) {
        this.typeOfContact = typeOfContact;
    }

    /** Not-null value. */
    public String getGender() {
        return gender;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setGender(String gender) {
        this.gender = gender;
    }

    /** Not-null value. */
    public String getRole() {
        return role;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setRole(String role) {
        this.role = role;
    }

    /** Not-null value. */
    public String getQualification() {
        return qualification;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setQualification(String qualification) {
        this.qualification = qualification;
    }

    public String getNetworkOrAssociation() {
        return networkOrAssociation;
    }

    public void setNetworkOrAssociation(String networkOrAssociation) {
        this.networkOrAssociation = networkOrAssociation;
    }

    public Integer getGraduationYear() {
        return graduationYear;
    }

    public void setGraduationYear(Integer graduationYear) {
        this.graduationYear = graduationYear;
    }

    public long getCustomerId() {
        return customerId;
    }

    public void setCustomerId(long customerId) {
        this.customerId = customerId;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
