package org.chai.model;

import java.util.List;
import org.chai.model.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table MALARIA_DETAIL.
 */
public class MalariaDetail implements BaseEntity {

    /** Not-null value. */
    private String uuid;
    private java.util.Date dateOfSurvey;
    private Integer malariaPatientsInFacility;
    private Integer numberOfChildren;
    private String doYouPrescribeTreatment;
    private String heardAboutGreenLeaf;
    private String howDidYouHear;
    private String otherWaysHowYouHeard;
    private String howYouSuspectMalaria;
    private String doYouKnowMOHGuidelines;
    private String mohGuidelines;
    private String knowAboutGreenLeafAntimalarials;
    private String whatGreenLeafRepresents;
    private String doYouPrescribeWithoutGreenLeaf;
    private String whyPrescribeWithoutGreenLeaf;
    private String knowWhatSevereMalariaIs;
    private String signsOfSevereMalaria;
    private String howToManagePatientsWithSevereMalaria;
    private Boolean doYouStockAntimalarials;
    private Boolean doYouStockRDTs;
    private String pointOfsaleMaterial;
    private String recommendationNextStep;
    private Double latitude;
    private Double longitude;
    private Boolean isNew;
    private Boolean isHistory;
    /** Not-null value. */
    private String taskId;
    private Boolean isDirty;
    private Integer syncronisationStatus;
    private String syncronisationMessage;
    private java.util.Date dateCreated;
    private java.util.Date lastUpdated;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient MalariaDetailDao myDao;

    private Task task;
    private String task__resolvedKey;

    private List<DetailerStock> detailerMalariaStocks;

    // KEEP FIELDS - put your custom fields here
    @JsonIgnore
    private String taskId;
    @JsonIgnore
    private Boolean isDirty;
    @JsonIgnore
    private Integer syncronisationStatus;
    @JsonIgnore
    private String syncronisationMessage;
    @JsonIgnore
    private java.util.Date dateCreated;
    @JsonIgnore
    private java.util.Date lastUpdated;

    /** Used to resolve relations */
    @JsonIgnore
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @JsonIgnore
    private transient MalariaDetailDao myDao;
    @JsonIgnore
    private Task task;
    @JsonIgnore
    private String task__resolvedKey;
    // KEEP FIELDS END

    public MalariaDetail() {
    }

    public MalariaDetail(String uuid) {
        this.uuid = uuid;
    }

    public MalariaDetail(String uuid, java.util.Date dateOfSurvey, Integer malariaPatientsInFacility, Integer numberOfChildren, String doYouPrescribeTreatment, String heardAboutGreenLeaf, String howDidYouHear, String otherWaysHowYouHeard, String howYouSuspectMalaria, String doYouKnowMOHGuidelines, String mohGuidelines, String knowAboutGreenLeafAntimalarials, String whatGreenLeafRepresents, String doYouPrescribeWithoutGreenLeaf, String whyPrescribeWithoutGreenLeaf, String knowWhatSevereMalariaIs, String signsOfSevereMalaria, String howToManagePatientsWithSevereMalaria, Boolean doYouStockAntimalarials, Boolean doYouStockRDTs, String pointOfsaleMaterial, String recommendationNextStep, Double latitude, Double longitude, Boolean isNew, Boolean isHistory, String taskId, Boolean isDirty, Integer syncronisationStatus, String syncronisationMessage, java.util.Date dateCreated, java.util.Date lastUpdated) {
        this.uuid = uuid;
        this.dateOfSurvey = dateOfSurvey;
        this.malariaPatientsInFacility = malariaPatientsInFacility;
        this.numberOfChildren = numberOfChildren;
        this.doYouPrescribeTreatment = doYouPrescribeTreatment;
        this.heardAboutGreenLeaf = heardAboutGreenLeaf;
        this.howDidYouHear = howDidYouHear;
        this.otherWaysHowYouHeard = otherWaysHowYouHeard;
        this.howYouSuspectMalaria = howYouSuspectMalaria;
        this.doYouKnowMOHGuidelines = doYouKnowMOHGuidelines;
        this.mohGuidelines = mohGuidelines;
        this.knowAboutGreenLeafAntimalarials = knowAboutGreenLeafAntimalarials;
        this.whatGreenLeafRepresents = whatGreenLeafRepresents;
        this.doYouPrescribeWithoutGreenLeaf = doYouPrescribeWithoutGreenLeaf;
        this.whyPrescribeWithoutGreenLeaf = whyPrescribeWithoutGreenLeaf;
        this.knowWhatSevereMalariaIs = knowWhatSevereMalariaIs;
        this.signsOfSevereMalaria = signsOfSevereMalaria;
        this.howToManagePatientsWithSevereMalaria = howToManagePatientsWithSevereMalaria;
        this.doYouStockAntimalarials = doYouStockAntimalarials;
        this.doYouStockRDTs = doYouStockRDTs;
        this.pointOfsaleMaterial = pointOfsaleMaterial;
        this.recommendationNextStep = recommendationNextStep;
        this.latitude = latitude;
        this.longitude = longitude;
        this.isNew = isNew;
        this.isHistory = isHistory;
        this.taskId = taskId;
        this.isDirty = isDirty;
        this.syncronisationStatus = syncronisationStatus;
        this.syncronisationMessage = syncronisationMessage;
        this.dateCreated = dateCreated;
        this.lastUpdated = lastUpdated;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getMalariaDetailDao() : null;
    }

    /** Not-null value. */
    public String getUuid() {
        return uuid;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    public java.util.Date getDateOfSurvey() {
        return dateOfSurvey;
    }

    public void setDateOfSurvey(java.util.Date dateOfSurvey) {
        this.dateOfSurvey = dateOfSurvey;
    }

    public Integer getMalariaPatientsInFacility() {
        return malariaPatientsInFacility;
    }

    public void setMalariaPatientsInFacility(Integer malariaPatientsInFacility) {
        this.malariaPatientsInFacility = malariaPatientsInFacility;
    }

    public Integer getNumberOfChildren() {
        return numberOfChildren;
    }

    public void setNumberOfChildren(Integer numberOfChildren) {
        this.numberOfChildren = numberOfChildren;
    }

    public String getDoYouPrescribeTreatment() {
        return doYouPrescribeTreatment;
    }

    public void setDoYouPrescribeTreatment(String doYouPrescribeTreatment) {
        this.doYouPrescribeTreatment = doYouPrescribeTreatment;
    }

    public String getHeardAboutGreenLeaf() {
        return heardAboutGreenLeaf;
    }

    public void setHeardAboutGreenLeaf(String heardAboutGreenLeaf) {
        this.heardAboutGreenLeaf = heardAboutGreenLeaf;
    }

    public String getHowDidYouHear() {
        return howDidYouHear;
    }

    public void setHowDidYouHear(String howDidYouHear) {
        this.howDidYouHear = howDidYouHear;
    }

    public String getOtherWaysHowYouHeard() {
        return otherWaysHowYouHeard;
    }

    public void setOtherWaysHowYouHeard(String otherWaysHowYouHeard) {
        this.otherWaysHowYouHeard = otherWaysHowYouHeard;
    }

    public String getHowYouSuspectMalaria() {
        return howYouSuspectMalaria;
    }

    public void setHowYouSuspectMalaria(String howYouSuspectMalaria) {
        this.howYouSuspectMalaria = howYouSuspectMalaria;
    }

    public String getDoYouKnowMOHGuidelines() {
        return doYouKnowMOHGuidelines;
    }

    public void setDoYouKnowMOHGuidelines(String doYouKnowMOHGuidelines) {
        this.doYouKnowMOHGuidelines = doYouKnowMOHGuidelines;
    }

    public String getMohGuidelines() {
        return mohGuidelines;
    }

    public void setMohGuidelines(String mohGuidelines) {
        this.mohGuidelines = mohGuidelines;
    }

    public String getKnowAboutGreenLeafAntimalarials() {
        return knowAboutGreenLeafAntimalarials;
    }

    public void setKnowAboutGreenLeafAntimalarials(String knowAboutGreenLeafAntimalarials) {
        this.knowAboutGreenLeafAntimalarials = knowAboutGreenLeafAntimalarials;
    }

    public String getWhatGreenLeafRepresents() {
        return whatGreenLeafRepresents;
    }

    public void setWhatGreenLeafRepresents(String whatGreenLeafRepresents) {
        this.whatGreenLeafRepresents = whatGreenLeafRepresents;
    }

    public String getDoYouPrescribeWithoutGreenLeaf() {
        return doYouPrescribeWithoutGreenLeaf;
    }

    public void setDoYouPrescribeWithoutGreenLeaf(String doYouPrescribeWithoutGreenLeaf) {
        this.doYouPrescribeWithoutGreenLeaf = doYouPrescribeWithoutGreenLeaf;
    }

    public String getWhyPrescribeWithoutGreenLeaf() {
        return whyPrescribeWithoutGreenLeaf;
    }

    public void setWhyPrescribeWithoutGreenLeaf(String whyPrescribeWithoutGreenLeaf) {
        this.whyPrescribeWithoutGreenLeaf = whyPrescribeWithoutGreenLeaf;
    }

    public String getKnowWhatSevereMalariaIs() {
        return knowWhatSevereMalariaIs;
    }

    public void setKnowWhatSevereMalariaIs(String knowWhatSevereMalariaIs) {
        this.knowWhatSevereMalariaIs = knowWhatSevereMalariaIs;
    }

    public String getSignsOfSevereMalaria() {
        return signsOfSevereMalaria;
    }

    public void setSignsOfSevereMalaria(String signsOfSevereMalaria) {
        this.signsOfSevereMalaria = signsOfSevereMalaria;
    }

    public String getHowToManagePatientsWithSevereMalaria() {
        return howToManagePatientsWithSevereMalaria;
    }

    public void setHowToManagePatientsWithSevereMalaria(String howToManagePatientsWithSevereMalaria) {
        this.howToManagePatientsWithSevereMalaria = howToManagePatientsWithSevereMalaria;
    }

    public Boolean getDoYouStockAntimalarials() {
        return doYouStockAntimalarials;
    }

    public void setDoYouStockAntimalarials(Boolean doYouStockAntimalarials) {
        this.doYouStockAntimalarials = doYouStockAntimalarials;
    }

    public Boolean getDoYouStockRDTs() {
        return doYouStockRDTs;
    }

    public void setDoYouStockRDTs(Boolean doYouStockRDTs) {
        this.doYouStockRDTs = doYouStockRDTs;
    }

    public String getPointOfsaleMaterial() {
        return pointOfsaleMaterial;
    }

    public void setPointOfsaleMaterial(String pointOfsaleMaterial) {
        this.pointOfsaleMaterial = pointOfsaleMaterial;
    }

    public String getRecommendationNextStep() {
        return recommendationNextStep;
    }

    public void setRecommendationNextStep(String recommendationNextStep) {
        this.recommendationNextStep = recommendationNextStep;
    }

    public Double getLatitude() {
        return latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    public Double getLongitude() {
        return longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    public Boolean getIsNew() {
        return isNew;
    }

    public void setIsNew(Boolean isNew) {
        this.isNew = isNew;
    }

    public Boolean getIsHistory() {
        return isHistory;
    }

    public void setIsHistory(Boolean isHistory) {
        this.isHistory = isHistory;
    }

    /** Not-null value. */
    public String getTaskId() {
        return taskId;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    public Boolean getIsDirty() {
        return isDirty;
    }

    public void setIsDirty(Boolean isDirty) {
        this.isDirty = isDirty;
    }

    public Integer getSyncronisationStatus() {
        return syncronisationStatus;
    }

    public void setSyncronisationStatus(Integer syncronisationStatus) {
        this.syncronisationStatus = syncronisationStatus;
    }

    public String getSyncronisationMessage() {
        return syncronisationMessage;
    }

    public void setSyncronisationMessage(String syncronisationMessage) {
        this.syncronisationMessage = syncronisationMessage;
    }

    public java.util.Date getDateCreated() {
        return dateCreated;
    }

    public void setDateCreated(java.util.Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    public java.util.Date getLastUpdated() {
        return lastUpdated;
    }

    public void setLastUpdated(java.util.Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    /** To-one relationship, resolved on first access. */
    public Task getTask() {
        String __key = this.taskId;
        if (task__resolvedKey == null || task__resolvedKey != __key) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            TaskDao targetDao = daoSession.getTaskDao();
            Task taskNew = targetDao.load(__key);
            synchronized (this) {
                task = taskNew;
            	task__resolvedKey = __key;
            }
        }
        return task;
    }

    public void setTask(Task task) {
        if (task == null) {
            throw new DaoException("To-one property 'taskId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.task = task;
            taskId = task.getUuid();
            task__resolvedKey = taskId;
        }
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<DetailerStock> getDetailerMalariaStocks() {
        if (detailerMalariaStocks == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            DetailerStockDao targetDao = daoSession.getDetailerStockDao();
            List<DetailerStock> detailerMalariaStocksNew = targetDao._queryMalariaDetail_DetailerMalariaStocks(uuid);
            synchronized (this) {
                if(detailerMalariaStocks == null) {
                    detailerMalariaStocks = detailerMalariaStocksNew;
                }
            }
        }
        return detailerMalariaStocks;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetDetailerMalariaStocks() {
        detailerMalariaStocks = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
